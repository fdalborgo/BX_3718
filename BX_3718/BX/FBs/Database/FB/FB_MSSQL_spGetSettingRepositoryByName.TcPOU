<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_MSSQL_spGetSettingRepositoryByName" Id="{e3a156f1-f42a-4e45-8481-298949b44e2d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MSSQL_spGetSettingRepositoryByName
VAR_INPUT
	Execute					: BOOL;
	Enable					: BOOL;
	Reset					: BOOL;
	Name					: STRING(50);
END_VAR
VAR_OUTPUT
	Error					: BOOL;
	ErrorID					: DINT;
	Done					: BOOL;
	Busy					: BOOL;
	tcMessage 				: I_TcMessage;
	Q_tElapsedTime			: TIME;
	Data					: BOOL;
	Result					: STRING(DB.MAX_STRING_SIZE);
END_VAR
VAR
	RTRIG_Execute			: R_TRIG;
	RTRIG_Reset				: R_TRIG;
	iState					: INT := -1;	
	Parameters				: DUT_GetSettingRepositoryByName;
	TempSeparetor			: T_MaxString;
	TempS					: STRING(DB.MAX_STRING_SIZE);
	TempString				: STRING(50);
	Lenght					: UDINT;
END_VAR
VAR_IN_OUT
	fbSQLResult				: FB_SQLResultEvt;
	fbSQLStoredProcedure	: FB_SQLStoredProcedureEvt;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[RTRIG_Reset(CLK := Reset);
IF RTRIG_Reset.Q AND Execute AND Error AND NOT Busy THEN
	Execute := FALSE;
END_IF

Parameters.Name := Name;
RTRIG_Execute(CLK := Execute AND Enable);
IF(RTRIG_Execute.Q) THEN
	 Done							:= FALSE;
	 Error							:= FALSE;
	 ErrorID						:= 0; 
	 
	 iState							:= 0;
ELSIF NOT Execute AND NOT Busy THEN
	Busy			:= FALSE;
	Done			:= FALSE;
	Error			:= FALSE;
	
	iState := -1;
END_IF
CASE iState OF
	
	 0:
		Busy								:= TRUE;
		iState 								:= 10;
		
	10:
		IF fbSQLStoredProcedure.ExecuteDataReturn(pParameterStrc := ADR(Parameters), cbParameterStrc := SIZEOF(Parameters), pSQLDBResult := ADR(fbSqlResult)) THEN
			IF fbSQLStoredProcedure.bError THEN
				tcMessage := fbSQLStoredProcedure.ipTcResult;
				
				iState 							:= 1010; 
			ELSE	
				iState 							:= 20; 
			END_IF    
		END_IF
		
	20:
//		IF fbSQLResult.Read(0,1, ADR(Buffer), SIZEOF(Buffer), FALSE, TRUE) THEN
//			IF fbSQLResult.bError THEN
//				iState 							:= 1020;
//			ELSE
				Result := Parameters.Data;
				iState 							:= 30;
//			END_IF
//		END_IF
		
	30: 
		IF fbSQLResult.Release() THEN
			iState 								:= 40;		
		END_IF
		
	40:	
		IF Name = 'MESEnabled' THEN
			Lenght := LEN2(ADR(Parameters.Data));
			DELETE2(ADR(Parameters.Data),ADR(TempS), DB.MAX_STRING_SIZE, 1, 1);
			DELETE2(ADR(TempS),ADR(TempS), DB.MAX_STRING_SIZE, 1, Lenght - 1);
			TempSeparetor := ':';
			IF FindAndSplit(ADR(TempSeparetor),ADR(TempS),ADR(TempS),DB.MAX_STRING_SIZE,ADR(TempString), 50,FALSE) THEN
				Data := SEL(TempString = '1', FALSE, TRUE);
				iState 								:= 999;	
			ELSE
				iState 								:= 1040;
			END_IF
		ELSE
			iState 								:= 999;			
		END_IF
		
	999:
		Done			:= TRUE;
		Busy			:= FALSE;
		
END_CASE 
 
IF iState > 1000 THEN
	Error 		:= TRUE;
	ErrorID	 	:= iState; 
	Busy	 	:= FALSE;
	iState := -1;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="FB_MSSQL_spGetSettingRepositoryByName">
      <LineId Id="4866" Count="2" />
      <LineId Id="4864" Count="1" />
      <LineId Id="4746" Count="48" />
      <LineId Id="4829" Count="1" />
      <LineId Id="4828" Count="0" />
      <LineId Id="4818" Count="0" />
      <LineId Id="4813" Count="0" />
      <LineId Id="4821" Count="0" />
      <LineId Id="4833" Count="0" />
      <LineId Id="4823" Count="1" />
      <LineId Id="4822" Count="0" />
      <LineId Id="4815" Count="1" />
      <LineId Id="4814" Count="0" />
      <LineId Id="4801" Count="11" />
      <LineId Id="3300" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>