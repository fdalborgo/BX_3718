<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="PRG_MSSQL_UpdatePartLocationsAndProcessingData" Id="{e22006cd-16bc-4c7a-9957-99c2e84a4b91}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_MSSQL_UpdatePartLocationsAndProcessingData
VAR_INPUT
	Execute					: BOOL;
	Enable					: BOOL;
	stProcessingData		: ARRAY[0..CNC.NUM_STATIONS] OF DUT_stProcessingData;
END_VAR
VAR_OUTPUT
	Error					: BOOL;
	ErrorID					: DINT;
	Done					: BOOL;
	Busy					: BOOL;
	ReturnValue				: BOOL;
	tcMessage 				: I_TcMessage;
END_VAR
VAR
	RTRIG_Execute			: R_TRIG;
	iState					: INT := -1;
	fbJsonDataType 			: FB_JsonReadWriteDataType;
	hr	:	HRESULT;
	i	: UINT;
	ArrayElement	: STRING(DB.MAX_STRING_SIZE);
	tempString : STRING;
END_VAR
VAR_IN_OUT
	fbSQLStoredProcedure	: FB_SQLStoredProcedureEvt;
	fbSQLResult				: FB_SQLResultEvt;
	Parameters		: DUT_UpdatePartLocationsAndProcessingData;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[RTRIG_Execute(CLK := Execute AND Enable);
IF(RTRIG_Execute.Q) THEN
	 Done	 := FALSE;
	 Error	 := FALSE;
	 ErrorID := 0;
	         
	 iState	 := 0;
ELSIF NOT Execute AND NOT Busy THEN
	Busy			:= FALSE;
	Done			:= FALSE;
	Error			:= FALSE;
	
	iState := -1;
END_IF
 
CASE iState OF
 
	0:
 		ReturnValue	:= FALSE;
		Busy		:= TRUE;
		
		Parameters.Data :='[';
		tempString := ',';
		
		iState 		:= 10;
	
	10:
		// creazione JSON array
		FOR i := 0 TO CNC.NUM_STATIONS DO
			fbJsonDataType.CopyJsonStringFromSymbol('DUT_stProcessingData', SIZEOF(stProcessingData[i]), ADR(stProcessingData[i]), ArrayElement, SIZEOF(ArrayElement), hrErrorCode => hr);
			IF SUCCEEDED(hr) THEN
				CONCAT2(ADR(Parameters.Data), ADR(ArrayElement), ADR(Parameters.Data), SIZEOF(Parameters.Data));
				IF i <> CNC.NUM_STATIONS THEN
					CONCAT2(ADR(Parameters.Data), ADR(tempString), ADR(Parameters.Data), SIZEOF(Parameters.Data));
				END_IF
			ELSE
				iState := 1010;
				RETURN;
			END_IF
		END_FOR
   		
		tempString := ']';
		CONCAT2(ADR(Parameters.Data), ADR(tempString), ADR(Parameters.Data), SIZEOF(Parameters.Data));
		iState := 20;

	20:
		IF fbSQLStoredProcedure.Execute(pParameterStrc := ADR(Parameters), cbParameterStrc:= SIZEOF(Parameters)) THEN
			IF fbSQLStoredProcedure.bError THEN
				tcMessage := fbSQLStoredProcedure.ipTcResult;
				
				iState 							:= 1020; 
			ELSE
				iState 							:= 30; 
			END_IF    
		END_IF

	30: 
		IF Parameters.return_value = 0 THEN
			ReturnValue := TRUE;
			
			iState 							:= 999; 
		END_IF
	
	999:
		Done			:= TRUE;
		Busy			:= FALSE;
	
END_CASE 
 
IF iState > 1000 THEN
	Error 		:= TRUE;
	ErrorID	 	:= iState; 
	Busy	 	:= FALSE;
	iState := -1;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="PRG_MSSQL_UpdatePartLocationsAndProcessingData">
      <LineId Id="771" Count="1" />
      <LineId Id="774" Count="11" />
      <LineId Id="789" Count="2" />
      <LineId Id="853" Count="0" />
      <LineId Id="793" Count="0" />
      <LineId Id="795" Count="24" />
      <LineId Id="881" Count="0" />
      <LineId Id="820" Count="0" />
      <LineId Id="822" Count="0" />
      <LineId Id="824" Count="16" />
      <LineId Id="842" Count="8" />
      <LineId Id="852" Count="0" />
      <LineId Id="61" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>